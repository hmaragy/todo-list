{"version":3,"sources":["store/filters.js","store/todos.js","store/index.js","components/Button.js","components/Input.js","components/Card.js","components/TodoItem.js","App.js","index.js","store/localStorage.js"],"names":["initialState","status","filtersReducer","state","action","type","payload","todosReducer","id","Date","now","text","completed","map","todo","filter","rootReducer","combineReducers","todos","filters","Button","props","onClick","className","icon","children","Input","useState","todoText","setTodoText","focussed","setFocussed","handleClick","useEffect","onKeypress","e","keyCode","document","addEventListener","removeEventListener","value","onChange","target","onFocusCapture","currentTarget","onBlurCapture","placeholder","BiAddToQueue","Card","TodoItem","checked","htmlFor","selectTodos","selectFilters","App","useSelector","checkedTodos","setCheckedTodos","dispatch","useDispatch","handleTodoChecked","old","handleFilter","markComplete","Object","keys","forEach","todoList","store","createStore","serializedState","localStorage","getItem","JSON","parse","err","loadState","subscribe","throttle","stringify","setItem","console","log","saveState","getState","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb64331d.chunk.js","sourcesContent":["const initialState = {\r\n  status: \"all\",\r\n};\r\n\r\nconst filtersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"filters/statusChanged\":\r\n      return {\r\n        ...state,\r\n        status: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filtersReducer;\r\n","const initialState = [];\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n  // The reducer normally looks at the action type field to decide what happens\r\n  switch (action.type) {\r\n    case \"todos/added\":\r\n      return [\r\n        {\r\n          id: Date.now(),\r\n          text: action.payload,\r\n          completed: false,\r\n        },\r\n        ...state,\r\n      ];\r\n\r\n    case \"todos/completed\":\r\n      return state.map(todo => {\r\n        if (todo.id !== action.payload.id) {\r\n          return todo;\r\n        }\r\n\r\n        return {\r\n          ...todo,\r\n          completed: action.payload.completed,\r\n        };\r\n      });\r\n\r\n    case \"todos/deleted\":\r\n      return state.filter(todo => {\r\n        if (todo.id !== action.payload) {\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n    default:\r\n      // care about this specific action, return the existing state unchanged\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport filtersReducer from \"./filters\";\r\nimport todosReducer from \"./todos\";\r\n\r\n// export default function rootReducer(state = {}, action) {\r\n//   return {\r\n//     todos: todosReducer(state.todos, action),\r\n//     filters: filtersReducer(state.filters, action),\r\n//   };\r\n// }\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todosReducer,\r\n  filters: filtersReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","const Button = props => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={`${props.className || \"\"} \r\n        text-accent-dark border-2 border-accent-dark py-0.5 px-2 hover:bg-accent-dark hover:text-secondary transition-all transform-gpu flex justify-items-center items-center`}\r\n    >\r\n      {props.icon && <props.icon className={\"mr-2\"} />}\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect, useState } from \"react\";\r\nimport { BiAddToQueue } from \"react-icons/bi\";\r\nimport Button from \"./Button\";\r\n\r\nconst Input = props => {\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  const [focussed, setFocussed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    function onKeypress(e) {\r\n      if (e.keyCode === 13 && focussed) {\r\n        handleClick(todoText);\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"keypress\", onKeypress);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keypress\", onKeypress);\r\n    };\r\n  }, [todoText, focussed]);\r\n\r\n  function handleChange(e) {\r\n    setTodoText(e.target.value);\r\n  }\r\n\r\n  function handleClick() {\r\n    props.onClick(todoText);\r\n    setTodoText(\"\");\r\n  }\r\n\r\n  function handleFocusChange(e) {\r\n    if (e.currentTarget === e.target) {\r\n      if (!focussed) {\r\n        setFocussed(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleBlueChange(e) {\r\n    if (e.currentTarget === e.target) {\r\n      if (focussed) {\r\n        setFocussed(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.className || \"\"\r\n      } transition-all delay-100 relative border-b-8 border-secondary`}\r\n    >\r\n      <input\r\n        value={todoText}\r\n        onChange={handleChange}\r\n        onFocusCapture={handleFocusChange}\r\n        onBlurCapture={handleBlueChange}\r\n        type=\"text\"\r\n        className=\"w-full h-full p-6 pr-20 outline-none\"\r\n        placeholder=\"Add a todo\"\r\n      />\r\n      <Button\r\n        onClick={handleClick}\r\n        icon={BiAddToQueue}\r\n        className=\"absolute top-1/2 transform-gpu -translate-y-1/2 right-1 border-none active:bg-accent\"\r\n      >\r\n        Add\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","const Card = props => {\r\n  return (\r\n    <div\r\n      className={`${\r\n        props.className || \"\"\r\n      } transition-shadow delay-200 shadow-md hover:shadow-sm`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","const TodoItem = props => {\r\n  function handleChange(e) {\r\n    props.onChange(props.id, e.target.checked);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id=\"todo\"\r\n      className=\"flex items-center border-b-2 px-4 border-secondary cursor-pointer hover:bg-accent hover:text-white\"\r\n    >\r\n      <input\r\n        onChange={handleChange}\r\n        id={\"check\" + props.id}\r\n        type=\"checkbox\"\r\n        className=\"mr-2 cursor-pointer\"\r\n      />\r\n      <label\r\n        htmlFor={\"check\" + props.id}\r\n        className=\"w-full h-full cursor-pointer p-4\"\r\n      >\r\n        {props.children}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Input from \"./components/Input\";\nimport Card from \"./components/Card\";\nimport Button from \"./components/Button\";\nimport TodoItem from \"./components/TodoItem\";\n\nconst selectTodos = state => state.todos;\nconst selectFilters = state => state.filters;\n\nfunction App() {\n  const todos = useSelector(selectTodos);\n  const filters = useSelector(selectFilters);\n\n  const [checkedTodos, setCheckedTodos] = useState({});\n\n  const dispatch = useDispatch();\n\n  function handleAddTodo(todoText) {\n    dispatch({ type: \"todos/added\", payload: todoText });\n  }\n\n  function handleTodoChecked(id, checked) {\n    setCheckedTodos(old => {\n      return {\n        ...old,\n        [id]: checked,\n      };\n    });\n  }\n\n  function handleFilter(filter) {\n    dispatch({ type: \"filters/statusChanged\", payload: filter });\n  }\n\n  function markComplete(completed) {\n    Object.keys(checkedTodos).forEach(id => {\n      if (checkedTodos[id]) {\n        dispatch({\n          type: \"todos/completed\",\n          payload: { id: +id, completed: completed },\n        });\n      }\n    });\n  }\n\n  function deleteTodos() {\n    Object.keys(checkedTodos).forEach(id => {\n      if (checkedTodos[id]) {\n        dispatch({ type: \"todos/deleted\", payload: +id });\n      }\n    });\n  }\n\n  const todoList = todos\n    ?.map(todo => {\n      return (\n        <TodoItem\n          onChange={handleTodoChecked}\n          key={todo.id}\n          id={todo.id}\n          completed={todo.completed}\n        >\n          {todo.text}\n        </TodoItem>\n      );\n    })\n    /* The filter Pipe, instead of filtering in redux */\n    .filter(todo => {\n      if (filters.status === \"all\") return true;\n      else {\n        if (filters.status === \"completed\" && todo.props.completed) {\n          return true;\n        } else if (filters.status === \"active\" && !todo.props.completed)\n          return true;\n        else return false;\n      }\n    });\n\n  return (\n    <div className=\"bg-secondary h-screen flex flex-col justify-center items-center\">\n      <h1 className=\"text-accent-dark font-mono text-6xl mb-4\">Todos</h1>\n      <Card className=\"bg-white w-11/12 lg:w-1/2 md:w-2/3\">\n        <Input onClick={handleAddTodo} />\n        <div\n          id=\"todo-list\"\n          className=\"h-80 grid grid-flow-row items-center content-start overflow-y-auto\"\n        >\n          {todoList}\n        </div>\n        <div\n          id=\"tools\"\n          className=\"grid grid-cols-1 sm:grid-cols-2 justify-items-start p-4\"\n        >\n          <div id=\"actions\" className=\"mb-4 sm:mb-0\">\n            <h2 className=\"mb-2\">Actions</h2>\n            <Button onClick={() => markComplete(true)} className=\"mb-2\">\n              Mark completed\n            </Button>\n            <Button onClick={() => markComplete(false)} className=\"mb-2\">\n              Clear completed\n            </Button>\n\n            <Button onClick={deleteTodos} className=\"mb-2\">\n              Delete\n            </Button>\n          </div>\n\n          <div className=\"filter\">\n            <h2 className=\"mb-2\">Filter by status</h2>\n            <Button\n              onClick={() => handleFilter(\"all\")}\n              className={`${\"mb-2\"} ${\n                filters.status === \"all\" ? \"bg-accent-dark text-white\" : \"\"\n              }`}\n            >\n              All\n            </Button>\n            <Button\n              onClick={() => handleFilter(\"active\")}\n              className={`${\"mb-2\"} ${\n                filters.status === \"active\" ? \"bg-accent-dark text-white\" : \"\"\n              }`}\n            >\n              Active\n            </Button>\n            <Button\n              onClick={() => handleFilter(\"completed\")}\n              className={`${\"mb-2\"} ${\n                filters.status === \"completed\"\n                  ? \"bg-accent-dark text-white\"\n                  : \"\"\n              }`}\n            >\n              Complete\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport throttle from \"lodash.throttle\";\n\nimport rootReducer from \"./store\";\nimport { loadState, saveState } from \"./store/localStorage\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\n// function getStoredState() {\n//   const persistedTodosString = localStorage.getItem(\"todos\") || \"[]\";\n//   return {\n//     todos: JSON.parse(persistedTodosString),\n//   };\n// }\n\nconst store = createStore(rootReducer, loadState());\nstore.subscribe(\n  throttle(() => {\n    saveState(store.getState());\n  }),\n  200\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = state => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"],"sourceRoot":""}